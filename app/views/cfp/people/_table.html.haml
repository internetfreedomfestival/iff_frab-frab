%table.zebra-striped
  %thead
    %tr
      %th.first
      %th= t("Title")
      %th.roles
      %th= t("Roles")

      - if @conference.event_state_visible
        %th= t("Status")
      - if @conference.feedback_enabled
        %th
        %th= t(:event_feedback)
      %th.last= t(:actions)
  %tbody

    - collection.each do |event|
      %tr
        %th.first
        %td= event.title

        %th.role
        %td= event.event_people.select{|event_person| event_person.person == @person}.map(&:event_role).join(', ')

        - if @conference.event_state_visible
          - if event.state == 'rejected'
            %td= 'Not Accepted'
          - else
            %td= event.state
        - if @conference.feedback_enabled
          %td
            %b= number_with_precision event.average_feedback, precision: 2
          %td
            - if event.event_feedbacks_count > 2
              s<sub>N-1</sub> = #{event.feedback_standard_deviation} n = #{event.event_feedbacks_count}
            - else
              No Feedback
        %td
          = link_to t("Edit"), edit_cfp_event_path(event), class: "btn primary"
          - if event.event_people.find { |event_person| event_person.person == @person && event_person.event_role == 'submitter' }
            = link_to t("Delete"), cfp_event_path(event), class: "btn danger", method: :delete, :data => {:confirm => "Are you absolutely sure you want to delete this proposal? This will be final!"}
          - if event.state == "accepting"
            = action_button "success", "Confirm", update_state_cfp_event_path(event)
          - if @conference.event_state_visible
            - if event.state == "unconfirmed"
              = link_to "Confirm", confirm_cfp_event_path(event), method: :put, class: "btn success medium"
            - if event.transition_possible? :withdrawn and event.start_time and event.start_time > Time.now
              = link_to t("cfp.withdraw"), withdraw_cfp_event_path(event), method: :put, confirm: t("cfp.withdrawal_confirmation"), class: "btn danger small"
      - if @conference.feedback_enabled
        - event.event_feedbacks.each do |feedback|
          - next if feedback.comment.blank?
          %tr
            %td
            - if @conference.event_state_visible
              %td{colspan: 2}
            - else
              %td
                = raty_for("event_rating_#{event.id}", feedback.rating)
            %td= feedback.comment
            %td

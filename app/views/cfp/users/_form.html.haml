= simple_form_for(@form, url: cfp_user_path, html: {multipart: true, id: "register_form"}) do |f|
  %h3 The information provided in this form will remain private. None of it will be shared with other participants.
  %h3= t("cfp.personal_details_later")
  %hr

  %fieldset.inputs
    .offset1
      .row
        .span24{style: "line-height: 22px; padding: 10px; width: 922px;"}
          = f.input :email, label: "Contact Email", required: true
          = f.input :email_confirmation, label: "Confirm Contact Email", required: true
          = f.input :password, required: true
          = f.input :password_confirmation, required: true
          = f.input :first_name, label: "First Name", required: true
          = f.input :last_name, label: "Last Name"
          = f.input :pgp_key, label: "PGP Key", as: :string, hint: "Preferable format: 0xf60a89ad6ff97a2f"
          = f.input :gender, collection: translated_options(Person::GENDERS), label: "Gender", required: true
          = f.input :country_of_origin, collection: translated_options(Person::COUNTRIES), label: "Country of Origin", required: true
          = f.input :group, collection: [[''], ['Yes', true], ['No', false]], default: 0, label: "Do you identify as part of an ethnic, racial or cultural minority group?"

          .clearfix.form-group{class: ("has-error" if @form.errors.messages.key?(:professional_background))}
            .form-label
              %label
                %span.form-required__text Required Field.
                Professional Background
              - if @form.errors.messages.key?(:professional_background)
                %span.form-input__error= @form.errors.messages[:professional_background].first
            .form-help
              %span.form-help__text Check the boxes that most closely describe the work you do.
            .form-input
              %ul.inputs-list
                = f.collection_check_boxes(:professional_background, Person::PROFESSIONAL_BACKGROUND, :to_s, :to_s, boolean_style: :inline, :include_hidden => false) do |c|
                  %li
                    =c.label do
                      = c.check_box
                      %span= c.text

          = f.input :other_background, label: "Professional Title"
          = f.input :organization
          = f.input :project, as: :text

          .clearfix.form-group{class: ("has-error" if @form.errors.messages.key?(:include_in_mailings))}
            .form-label
              %label
                %span.form-required__text Required Field.
                Would you like to subscribe to the IFF Mailing List?
              - if @form.errors.messages.key?(:include_in_mailings)
                %span.form-input__error= @form.errors.messages[:include_in_mailings].first
            .form-help
              %span.form-help__text Donâ€™t miss important updates and opportunities!
            .form-input
              %ul.inputs-list
                = f.collection_radio_buttons(:include_in_mailings, [[true, "Yes, keep me updated!"], [false, "No, thanks"]], :first, :last, {boolean_style: :inline}) do |r|
                  %li
                    =r.label do
                      = r.radio_button
                      %span= r.text

          .clearfix.form-group{class: ("has-error" if @form.errors.messages.key?(:invitation_to_mattermost))}
            .form-label
              %label
                %span.form-required__text Required Field.
                Would you like to receive a Mattermost invite?
              - if @form.errors.messages.key?(:invitation_to_mattermost)
                %span.form-input__error= @form.errors.messages[:invitation_to_mattermost].first
            .form-help
              %span.form-help__text Like Slack, but open source! A great way to connect with the IFF community.
            .form-input
              %ul.inputs-list
                = f.collection_radio_buttons(:invitation_to_mattermost, [[true, "Yes, I want an invite"], [false, "No, thanks"]], :first, :last, {boolean_style: :inline}) do |r|
                  %li
                    =r.label do
                      = r.radio_button
                      %span= r.text

        .span24
          %br
            = f.button :submit, class: 'primary', value: "Register"
            = link_to t("cfp.back"), cfp_root_path, class: "btn danger"

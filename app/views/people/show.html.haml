%section
  .page-header
    %h1 Person: #{@person.full_name || @person.first_name}
  .row
    .span24
      - if can? :manage, @user
        - if @user.role == "crew" && !@is_fellow.nil?
          %h3 Already a Fellow
        - else
          - if FeatureToggle.new_ticketing_system_enabled?
            = action_button "success", 'Send invitation', send_invitation_person_path(@person), confirm: 'Are you sure?', method: :post, :data => {:confirm => "Are you absolutely sure you want to send an invitation to this person?"}
            - if @attendance_status && @attendance_status.status == "Requested"
              = action_button "success", 'Accept request', accept_request_person_path(@person), confirm: 'Are you sure?', method: :post, :data => {:confirm => "Are you absolutely sure you want to accept a request to this person?"}
          = action_button "success", "Make this person a Fellow", make_fellow_people_path(@person), title: "This will make this person a fellow."
        - if @person.late_event_submit == false
          = action_button "success", "Allow Late Event Submission", allow_late_submissions_people_path(@person), title: "This will allow this person to submit events after the deadline."
        - if @user.confirmed_at.nil?
          = action_button "success", "Confirm User", confirm_user_people_path(@person)
      - if can? :crud, @person
        = action_button "primary", "Edit person", edit_person_path(@person), title: "Edit this person's data."
      - if can? :administrate, Person
        - if @person.old_attendance_status != 'canceled'
          = action_button "danger", "Cancel Attendance", cancel_attendance_people_path(@person), title: "Cancel this person's attendance."
        %p
        = action_button "add", "Add person", new_person_path, title: "Add a new person."
      - if @person.public_and_accepted_events_as_speaker_in(@conference).present?
        = action_button "attend", "Attending", attend_person_path, title: "Mark person as present.", method: 'PUT'
      - if @conference.ticket_server_enabled?
        - unless @person.remote_ticket?
          = action_button "primary", "Add Ticket", tickets_path(person_id: @person), method: :post, title: "Create a ticket for this person."
  %br
  = render 'shared/people_tabs'
  - if can? :manage, Person and @person.user.nil?
    .row
      .span16
        %p.alert-message.warning
          Person has no user account yet and cannot login. Click on the user tab to create an account.
  .row
    .span10
      %h2 Basic information
      %p
        %b Created at:
        = @person.created_at
      %p
        %b Attendance Status:
        = @attendance_status && @attendance_status.status
      %p
        %b Public name:
        = @person.public_name
      %p
        %b Person Id:
        = @person.id
      %p
        %b Email:
        = @person.email
      %p
        %b Twitter:
        = @person.twitter
      %p
        %b Website:
        = @person.personal_website
      %p
        %b Attending:
        This hasn't been created yet
      %p
        %b Attended Iff Before:
        = @person.iff_before
      %p
        %b Presented at Iff Before:
        = @years_presented
      %p
        %b DIF Status:
        - if @person.dif
          = @person.dif.status
        - else
          Has NOT Applied
      %p
        %b Volunteer:
        = @person.interested_in_volunteer
      %p
        %b Invite to Mailing List:
        - if @person.already_mailing == true
          Already in Mailing List
        - else
          = @person.include_in_mailings
      %p
        %b Invite to Mattermost:
        - if @person.already_mattermost == true
          Already in Mattermost
        - else
          = @person.invitation_to_mattermost
      %p
        %b Allowed to submit events late:
        = @person.late_event_submit

  .row
    .span10
      %h2 Bio
      %p
        %b First name:
        = @person.first_name
      %p
        %b Last name:
        = @person.last_name
      %p
        %b PGP Key:
        = @person.pgp_key
      %p
        %b Gender:
        = @person.gender
      %p
        %b Country of Origin:
        = @person.country_of_origin
      %p
        %b Do you identify as part of an ethnic, racial or cultural minority group?:
        = @person.group

  .row
    .span10
      %h2 Professional
      %p
        %b Professional Background:
        = @person.professional_background
      %p
        %b Other Background:
        = @person.other_background
      %p
        %b Organization:
        = @person.organization
      %p
        %b Project:
        = @person.project
      %p
        %b Title:
        = @person.title
  .row
    .span10
      %h2 Feedback
      %p
        %b What are your goals for the 2018 IFF? What would you like to achieve?:
        = @person.iff_goals
      %p
        %b What upcoming challenges and/or obstacles do you see either in your region or worldwide in regards to Internet Freedom that you think the community should be aware of?:
        = @person.challenges
      %p
        %b What resources or tools do you think that the IF community should be aware of?:
        = @person.other_resources

%section
  - if @person.dif
    .row
      .span6
        %h2 DIF
        %b Status:
        = @person.dif.status
        %br/
        %b Type of Travel Support Requested:
        = @person.dif.travel_support
        %br/
        %b Received travel assistance in the past?:
        = @person.dif.past_travel_assistance
        %br/
        %b Willing to Fascilitate?
        = @person.dif.willing_to_facilitate
      - unless @person.ticket.nil? or @person.ticket.remote_ticket_id.nil?
        %p
          %b Ticket:
          -if @conference.ticket_server.nil?
            = @person.ticket.remote_ticket_id
          -else
            = link_to @person.ticket.remote_ticket_id, get_ticket_view_url(@person.ticket.remote_ticket_id), target: "_blank"
%section
  .row
    .span16
      - unless @current_events.empty?
        %h2 Events in current conference
        = render "events/table", collection: @current_events
      - unless @other_events.empty?
        %h2 Events in other conferences
        = render "events_in_other_conferences_table", collection: @other_events

- if @conference.expenses_enabled? and @expenses.any?
  %section
    .row
      .span16
        %h2 Expenses
    .row
      .span6
        %p
          %b Reimbursed expenses:
      .span10
        %p
          = to_currency @expenses_sum_reimbursed
    .row
      .span6
        %p
          %b Non-reimbursed expenses:
      .span10
        %p
          = to_currency @expenses_sum_non_reimbursed

- if @conference.transport_needs_enabled? and @transport_needs.any?
  %section
    .row
      .span16
        %h2 Transport needs
        %table.zebra-striped
          %thead
            %tr
              %th When
              %th Type
              %th # of seats
              %th Booked?
              %th Note
              %th
          %tbody
            - @transport_needs.each do |tn|
              %tr
                %td= tn.at.to_formatted_s(:long)
                %td= tn.transport_type
                %td= tn.seats
                %td= tn.booked
                %td= tn.note

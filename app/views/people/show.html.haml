%section
  .page-header
    %h1 Person: #{@person.full_name || @person.first_name}
  .row
    .span24
      - if can? :manage, @user
        - if @user.role == "crew" && @is_fellow.present?
          %h3 Already a Fellow
        - if FeatureToggle.new_ticketing_system_enabled?
          = action_button "success", 'Send invitation', send_invitation_person_path(@person), confirm: 'Are you sure?', method: :post, :data => {:confirm => "Are you absolutely sure you want to send an invitation to this person?"}
          - if @attendance_status&.invited? || @attendance_status&.registered?
            = action_button "success", 'Assign +5 invitations', add_invitations_person_path(@person), confirm: 'Are you sure?', method: :post, :data => {:confirm => "Are you absolutely sure you want to assign 5 more invitations to this person?"}
          - if @attendance_status&.requested? || @attendance_status&.on_hold?
            = action_button "success", 'Accept request', accept_request_person_path(@person), confirm: 'Are you sure?', method: :post, :data => {:confirm => "Are you absolutely sure you want to accept a request to this person?"}
          - if @attendance_status&.requested?
            = action_button "success", 'On Hold', on_hold_request_person_path(@person), method: :post
          - if @attendance_status&.requested? || @attendance_status&.invited? || @attendance_status&.on_hold?
            = action_button "success", 'Reject', reject_person_path(@person), method: :post
        - unless @user.role == "crew" && @is_fellow.present?
          = action_button "success", "Make this person a Fellow", make_fellow_people_path(@person), title: "This will make this person a fellow."
        - if @person.late_event_submit == false
          = action_button "success", "Allow Late Event Submission", allow_late_submissions_people_path(@person), title: "This will allow this person to submit events after the deadline."
        - if @user.confirmed_at.nil?
          = action_button "success", "Confirm User", confirm_user_people_path(@person)
      - if can? :crud, @person
        = action_button "primary", "Edit person", edit_person_path(@person), title: "Edit this person's data."
      - if can? :administrate, Person
        = action_button "small danger", 'Destroy', @person, confirm: 'Are you sure?', method: :delete, :data => {:confirm => "Are you absolutely sure you want to delete this person? This will be final!"}
        -# - if @attendance_status
        -#   = action_button "danger", "Cancel Attendance", cancel_attendance_people_path(@person), title: "Cancel this person's attendance."
        %p
        = action_button "add", "Add person", new_person_path, title: "Add a new person."
      - if @person.public_and_accepted_events_as_speaker_in(@conference).present?
        = action_button "attend", "Attending", attend_person_path, title: "Mark person as present.", method: 'PUT'
      - if @conference.ticket_server_enabled?
        - unless @person.remote_ticket?
          = action_button "primary", "Add Ticket", tickets_path(person_id: @person), method: :post, title: "Create a ticket for this person."
  %br
  = render 'shared/people_tabs'
  - if can? :manage, Person and @person.user.nil?
    .row
      .span16
        %p.alert-message.warning
          Person has no user account yet and cannot login. Click on the user tab to create an account.
  .row
    .span8
      %h2 Basic information
      %p
        %b Created at:
        = @person.created_at
      %p
        %b Attendance Status:
        = @attendance_status&.status
      %p
        %b Invitations Remaining:
        = Invited.pending_invites_for(@person, @conference)
      %p
        %b Public Name:
        = @person.public_name
      %p
        %b Person Id:
        = @person.id
      %p
        %b Email:
        = @person.email
      %p
        %b Twitter:
        = @person.twitter
      %p
        %b Website:
        = @person.personal_website
      %p
        %b Attending:
        This hasn't been created yet
      %p
        %b Attended Iff Before:
        -if @person.iff_before
          = @person.iff_before.to_sentence
      %p
        %b Presented at Iff Before:
        -if @years_presented
          = @years_presented.to_sentence

      %p
        %b Volunteer:
        = @person.interested_in_volunteer
      %p
        %b Invite to Mailing List:
        - if @person.already_mailing == true
          Already in Mailing List
        - else
          = @person.include_in_mailings
      %p
        %b Invite to Mattermost:
        - if @person.already_mattermost == true
          Already in Mattermost
        - else
          = @person.invitation_to_mattermost
      %p
        %b Allowed to submit events late:
        = @person.late_event_submit

    .span8
      %h2 Bio
      %p
        %b First name:
        = @person.first_name
      %p
        %b Last name:
        = @person.last_name
      %p
        %b PGP Key:
        = @person.pgp_key
      %p
        %b Gender:
        = @person.gender
      %p
        %b Country of Origin:
        = @person.country_of_origin
      %p
        %b Do you identify as part of an ethnic, racial or cultural minority group?:
        = @person.group

    .span8
      %h2 Professional
      %p
        %b Professional Background:
        = @person.professional_background.to_sentence
      %p
        %b Other Background:
        = @person.other_background
      %p
        %b Organization:
        = @person.organization
      %p
        %b Project:
        = @person.project
      %p
        %b Title:
        = @person.title
  .row
    .span10
      %hr
      %h2 Feedback
      %p
        %b What are your goals for the 2019 IFF? What would you like to achieve?:
        = @person.iff_goals
      %p
        %b What upcoming challenges and/or obstacles do you see either in your region or worldwide in regards to Internet Freedom that you think the community should be aware of?:
        = @person.challenges
      %p
        %b What resources or tools do you think that the IF community should be aware of?:
        = @person.other_resources

  -if @ticket_list.length > 0
    %h2 Tickets Information
    - @ticket_list.each do |ticket|
      .row
        .span6{style: "background: #e6e2d3; padding: 10px"}
          %h2 Payment Details
          %p
            %b Registered for:
            = ticket.gender_pronoun
            = ticket.public_name
          %p
            %b Created at:
            = ticket.created_at
          %p
            %b Ticket Option:
            = ticket.ticket_option
          -if ticket.amount > 0
            %p
              %b Amount(USD):
              = ticket.amount
            %p
              %b Payment  ID:
              = ticket.payment_id
            - if ticket.status == "Completed"
              = action_button "danger", "Cancel Ticket", cancel_ticket_people_path(@person), title: "Cancel this person's ticket.", :data => {:confirm => "Are you sure you want to cancel their ticket?"}

            - if ticket.status == "To Refund"
              %p
                %b User canceled the ticket. You have to preform the refund manually.
              %p
                %b After refund, click here:
              %p
                = action_button "danger", "Refunded", refund_ticket_path(conference_acronym: @conference.acronym, id: ticket.id)
            - if ticket.status == "Canceled"
              %b Ticket Canceled.

          -else
            %p
              %b FREE Ticket.
            %p
              %b Amount:
              = "Not This Time"
            %p
              - if ticket.status == "Completed"
                = action_button "danger", "Cancel Ticket", cancel_ticket_people_path(@person), title: "Cancel this person's ticket.", :data => {:confirm => "Are you sure you want to cancel their ticket?"}
              - if ticket.status == "Canceled"
                %b Ticket Canceled.
      %hr


%section
  - if @current_events
    - @current_events.each do |event|
      .row
        .span10
          %h2 DIF
          %p
            %b Event Title
            = event.title
          %p
            %b Need travel assistance to attend the 2019 IFF
            = event.travel_assistance
          %p
            %b To which group less representative belongs
            = event.group
          %p
            %b Who should receive the recipient stipend
            = event.recipient_travel_stipend
          %p
            %b Travel Support
            - if event.travel_support
              = event.travel_support
          %p
            %b Past travel assistance
            - if event.past_travel_assistance
              = event.past_travel_assistance
          %p
            %b Dif Status
            = event.dif_status

          %p
            %b
            = action_button "primary", "Grant DIF", grant_dif_event_path(conference_acronym: @conference.acronym, id: event.id), :data => {:confirm => "Are you sure you want to grant this DIF?"}
%section
  .row
    .span16
      - unless @current_events.empty?
        %h2 Events in current conference
        = render "events/table", collection: @current_events
      - unless @other_events.empty?
        %h2 Events in other conferences
        = render "events_in_other_conferences_table", collection: @other_events

- if @conference.expenses_enabled? and @expenses.any?
  %section
    .row
      .span16
        %h2 Expenses
    .row
      .span6
        %p
          %b Reimbursed expenses:
      .span10
        %p
          = to_currency @expenses_sum_reimbursed
    .row
      .span6
        %p
          %b Non-reimbursed expenses:
      .span10
        %p
          = to_currency @expenses_sum_non_reimbursed

- if @conference.transport_needs_enabled? and @transport_needs.any?
  %section
    .row
      .span16
        %h2 Transport needs
        %table.zebra-striped
          %thead
            %tr
              %th When
              %th Type
              %th # of seats
              %th Booked?
              %th Note
              %th
          %tbody
            - @transport_needs.each do |tn|
              %tr
                %td= tn.at.to_formatted_s(:long)
                %td= tn.transport_type
                %td= tn.seats
                %td= tn.booked
                %td= tn.note
